import classNames from "classnames/bind";
import styles from "./Header.module.scss";

import Drawer from "../../Components/Drawer";

import { useState } from "react";

const cn = classNames.bind(styles);
function Header() {
    const [isclick, setclick] = useState(false);

    const menuitems = [
        { name: "Teams", href: "#" },
        { name: "Blog", href: "#" },
        { name: "Early Careers", href: "#" },
        { name: "Search Jobs", href: "#" },
        { name: "Sign in", href: "#" },
    ];

    const handleClick = () => {
        setclick(!isclick);
    };
    return (
        <div className={cn("Header", "transparent")}>
            <div className={cn("drawer")}>
                <div className={cn("logo-wrapper")}>
                    <span className={cn("menu-icon")} onClick={handleClick}>
                        <span className={cn("hamburger-menu-wrapper", `${isclick && "close"}`)}>
                            <span></span>
                            <span></span>
                            <span></span>
                        </span>
                    </span>

                    <span className={cn("logo-container")}>
                        <a href="/" className={cn("logo-link")}>
                            <img
                                alt="img"
                                src="data:image/svg+xml,%3Csvg%20width%3D%2227%22%20height%3D%2231%22%20viewBox%3D%220%200%2027%2031%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20d%3D%22M10.4%2011.9999V10.7999C10%2010.6999%209.6%2010.7%209.2%2010.7C4.1%2010.7%200%2014.7999%200%2019.8999C0%2022.9999%201.6%2025.7999%203.9%2027.3999L3.8%2027.2999C2.3%2025.6999%201.5%2023.5%201.5%2021.2C1.5%2016.1%205.5%2012.0999%2010.4%2011.9999Z%22%20fill%3D%22%2325F4EE%22%2F%3E%3Cpath%20d%3D%22M10.6002%2025.4C12.9002%2025.4%2014.7002%2023.6%2014.8002%2021.3V1.3H18.4002C18.3002%200.900003%2018.3002%200.5%2018.3002%200H13.3002V20C13.2002%2022.2%2011.4002%2024%209.1002%2024C8.4002%2024%207.7002%2023.8%207.2002%2023.5C8.0002%2024.6%209.2002%2025.4%2010.6002%2025.4Z%22%20fill%3D%22%2325F4EE%22%2F%3E%3Cpath%20d%3D%22M25.3%208.10005V6.90005C23.9%206.90005%2022.6%206.50005%2021.5%205.80005C22.5%206.90005%2023.8%207.80005%2025.3%208.10005Z%22%20fill%3D%22%2325F4EE%22%2F%3E%3Cpath%20d%3D%22M21.4999%205.79995C20.3999%204.59995%2019.7999%202.99995%2019.7999%201.19995H18.3999C18.7999%203.19995%2019.9999%204.79995%2021.4999%205.79995Z%22%20fill%3D%22%23FE2C55%22%2F%3E%3Cpath%20d%3D%22M9.2%2015.5999C6.9%2015.5999%205%2017.4999%205%2019.7999C5%2021.3999%206%2022.7999%207.3%2023.4999C6.8%2022.7999%206.5%2021.9999%206.5%2021.0999C6.5%2018.7999%208.4%2016.8999%2010.7%2016.8999C11.1%2016.8999%2011.5%2016.9999%2011.9%2017.0999V11.9999C11.5%2011.8999%2011.1%2011.8999%2010.7%2011.8999C10.6%2011.8999%2010.6%2011.8999%2010.5%2011.8999V15.6999C10%2015.6999%209.6%2015.5999%209.2%2015.5999Z%22%20fill%3D%22%23FE2C55%22%2F%3E%3Cpath%20d%3D%22M25.2999%208.1001V11.9001C22.6999%2011.9001%2020.2999%2011.1001%2018.3999%209.7001V19.9001C18.3999%2025.0001%2014.2999%2029.1001%209.1999%2029.1001C7.1999%2029.1001%205.3999%2028.5001%203.8999%2027.5001C5.5999%2029.3001%207.9999%2030.4001%2010.5999%2030.4001C15.6999%2030.4001%2019.7999%2026.3001%2019.7999%2021.2001V11.0001C21.7999%2012.4001%2024.1999%2013.2001%2026.6999%2013.2001V8.2001C26.2999%208.2001%2025.7999%208.2001%2025.2999%208.1001Z%22%20fill%3D%22%23FE2C55%22%2F%3E%3Cpath%20d%3D%22M18.3999%2019.8999V9.69995C20.3999%2011.1%2022.7999%2011.8999%2025.2999%2011.8999V7.99995C23.7999%207.69995%2022.4999%206.89995%2021.4999%205.79995C19.8999%204.79995%2018.7999%203.09995%2018.4999%201.19995H14.7999V21.2C14.6999%2023.4%2012.8999%2025.2%2010.5999%2025.2C9.1999%2025.2%207.9999%2024.4999%207.1999%2023.4999C5.8999%2022.8999%204.9999%2021.4999%204.9999%2019.8999C4.9999%2017.5999%206.8999%2015.7%209.1999%2015.7C9.5999%2015.7%209.9999%2015.7999%2010.3999%2015.8999V11.9999C5.3999%2012.0999%201.3999%2016.2%201.3999%2021.2C1.3999%2023.6%202.2999%2025.7999%203.8999%2027.4999C5.3999%2028.4999%207.1999%2029.2%209.1999%2029.2C14.2999%2029.1%2018.3999%2024.8999%2018.3999%2019.8999Z%22%20fill%3D%22white%22%2F%3E%3C%2Fsvg%3E"
                                className={cn("logo-icon")}
                            ></img>
                            <img
                                alt="img"
                                src="data:image/svg+xml,%3Csvg%20width%3D%2294%22%20height%3D%2222%22%20viewBox%3D%220%200%2094%2022%22%20fill%3D%22none%22%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%3E%3Cpath%20d%3D%22M0.700195%200.100098H16.3002L14.9002%204.6001H10.9002V21.1001H5.9002V4.50009H0.800194L0.700195%200.100098Z%22%20fill%3D%22white%22%2F%3E%3Cpath%20d%3D%22M41.9004%200.100098H57.9004L56.5004%204.6001H52.1004V21.1001H47.0004V4.50009H41.9004V0.100098Z%22%20fill%3D%22white%22%2F%3E%3Cpath%20d%3D%22M17.3003%206.80005H22.3003V21H17.3003V6.80005Z%22%20fill%3D%22white%22%2F%3E%3Cpath%20d%3D%22M24.3003%200H29.3003V9.8L34.3003%204.9H40.3003L34.0003%2011L41.0003%2021H35.5003L30.8003%2014L29.3003%2015.4V20.9H24.3003V0Z%22%20fill%3D%22white%22%2F%3E%3Cpath%20d%3D%22M77.2002%200H82.2002V9.8L87.2002%204.9H93.2002L86.9002%2011L93.9002%2021H88.4002L83.7002%2014L82.2002%2015.4V20.9H77.2002V0Z%22%20fill%3D%22white%22%2F%3E%3Cpath%20d%3D%22M19.8003%205.1001C21.181%205.1001%2022.3003%203.98081%2022.3003%202.6001C22.3003%201.21939%2021.181%200.100098%2019.8003%200.100098C18.4196%200.100098%2017.3003%201.21939%2017.3003%202.6001C17.3003%203.98081%2018.4196%205.1001%2019.8003%205.1001Z%22%20fill%3D%22white%22%2F%3E%3Cpath%20d%3D%22M57.2003%2012.5C57.2003%208%2060.7003%204.3%2065.1003%204C64.9003%204%2064.6003%204%2064.4003%204C59.7003%204%2055.8003%207.80001%2055.8003%2012.6C55.8003%2017.3%2059.6003%2021.2%2064.4003%2021.2C64.6003%2021.2%2064.9003%2021.2%2065.1003%2021.2C60.7003%2020.7%2057.2003%2017%2057.2003%2012.5Z%22%20fill%3D%22%2325F4EE%22%2F%3E%3Cpath%20d%3D%22M67.0002%203.8999C66.8002%203.8999%2066.5002%203.8999%2066.2002%203.8999C70.6002%204.1999%2074.1002%207.8999%2074.1002%2012.3999C74.1002%2016.8999%2070.6002%2020.5999%2066.2002%2020.8999C66.4002%2020.8999%2066.7002%2020.8999%2067.0002%2020.8999C71.7002%2020.8999%2075.6002%2017.0999%2075.6002%2012.2999C75.6002%207.7999%2071.8002%203.8999%2067.0002%203.8999Z%22%20fill%3D%22%23FE2C55%22%2F%3E%3Cpath%20d%3D%22M65.7001%203.8999C61.0001%203.8999%2057.1001%207.6999%2057.1001%2012.4999C57.1001%2017.1999%2060.9001%2021.0999%2065.7001%2021.0999C70.5001%2021.0999%2074.3001%2017.2999%2074.3001%2012.4999C74.3001%207.7999%2070.4001%203.8999%2065.7001%203.8999ZM65.7001%2016.6999C63.4001%2016.6999%2061.5001%2014.7999%2061.5001%2012.4999C61.5001%2010.1999%2063.4001%208.2999%2065.7001%208.2999C68.0001%208.2999%2069.9001%2010.1999%2069.9001%2012.4999C69.9001%2014.7999%2068.0001%2016.6999%2065.7001%2016.6999Z%22%20fill%3D%22white%22%2F%3E%3C%2Fsvg%3E"
                                className={cn("logo-text")}
                            ></img>
                            <img
                                alt="img"
                                src="//sf-tb-sg.ibytedtos.com/obj/ttfe-malisg/Helo/TikTok/header_icon_transparent.png"
                                className={cn("logo-sup")}
                            ></img>
                        </a>
                    </span>
                </div>
                <div className={cn("menu-wrapper")}>
                    {menuitems.map((item, index) => (
                        <div className={cn("menu-item")} key={index}>
                            <h2 className={cn("menu-link")}>
                                <a href={item.href}>{item.name}</a>
                            </h2>
                        </div>
                    ))}
                </div>
                {isclick && <div className={cn("drawer-mask")} onClick={handleClick}></div>}
                {isclick && <Drawer isclick />}
            </div>
        </div>
    );
}

export default Header;
